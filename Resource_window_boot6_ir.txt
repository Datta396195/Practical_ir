Clustering for IR
1. Implement a clustering algorithm (eg. K-Means or hierarchical clustering)

2. Apply the clustering algorithm to a set of documents and evaluate the clustering
results.



from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

documents = [
    "This is the first document.",
    "This document is the second document.",
    "And this is the third one.",
    "Is this the first document?",
]

vectorizer = TfidfVectorizer(max_features=1000)
X = vectorizer.fit_transform(documents)

k = 2
kmeans = KMeans(n_clusters=k).fit(X)

silhouette_avg = silhouette_score(X, kmeans.labels_)
print("Silhouette Score:", silhouette_avg)

print("Cluster Centroids:")
terms = vectorizer.get_feature_names_out()
for i, centroid in enumerate(kmeans.cluster_centers_.argsort()[:, ::-1]):
    print(f"Cluster {i}: {' '.join(terms[ind] for ind in centroid[:10])}")
